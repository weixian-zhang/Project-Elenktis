FROM microsoft/dotnet:2.2-sdk AS installer-env 

# install az func core tools
RUN apt-get update
RUN apt-get install zip unzip curl -y
RUN curl -sL https://deb.nodesource.com/setup_10.x | bash -
RUN apt-get install nodejs
RUN npm i -g azure-functions-core-tools@core --unsafe-perm

# Build project
WORKDIR /src

COPY CommonLib /src/CommonLib/

COPY Informer/MandateServiceInformer /src/Informer/MandateServiceInformer/

WORKDIR /src/CommonLib/Elenktis.Common.AzResourceManager
RUN dotnet restore Elenktis.Common.AzResourceManager.csproj

WORKDIR /src/CommonLib/Elenktis.Common.Configuration
RUN dotnet restore Elenktis.Common.Configuration.csproj

WORKDIR /src/CommonLib/Elenktis.Common.Messaging
RUN dotnet restore Elenktis.Common.Messaging.csproj

WORKDIR /src/CommonLib/Elenktis.Common.Command
RUN dotnet restore Elenktis.Common.Command.csproj

WORKDIR /src/Informer/MandateServiceInformer

RUN cd /src/Informer/MandateServiceInformer/ && \
    mkdir -p /home/site/wwwroot && \
    dotnet publish -c Debug --output /home/site/wwwroot

ENV AzureWebJobsScriptRoot=/home/site/wwwroot \
AzureFunctionsJobHost__Logging__Console__IsEnabled=true 

# install az func cli, dotnet sdk and ssh server for remote debug
#FROM ubuntu:18.04@sha256:de774a3145f7ca4f0bd144c7d4ffb2931e06634f11529653b23eba85aef8e378

# copy into ubuntu image from previous image
#COPY --from=installer-env ["/home/site/wwwroot", "/home/site/wwwroot"]

#COPY --from=installer-env ["/home/site/wwwroot/ssh/sshd-config", "/etc/ssh/"]

COPY Informer/MandateServiceInformer/ssh/sshd-config /etc/ssh/



# Install VS Remote Debugger
#RUN apt-get update
#RUN apt-get install zip unzip curl -y
RUN curl -sSL https://aka.ms/getvsdbgsh | bash /dev/stdin -v latest -l ~/vsdbg

# Install SSH for remote SSH debugging
RUN apt-get install -y --no-install-recommends openssh-server \
RUN mkdir /var/run/sshd
RUN echo 'root:P@s$w0rd' | chpasswd
RUN sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config
RUN sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd
EXPOSE 22

CMD ["/usr/sbin/sshd", "-D"]

# Set password to 'Docker!'. Change as needed.  
#RUN echo "root:P@s$w0rd" | chpasswd

#Copy SSH settings file. See elsewhere to find them.
#COPY Informer/MandateServiceInformer/ssh/sshd-config /src/etc/ssh/





#ssh key, if using password only comment this line
#COPY ./ssh/authorized_keys  root/.ssh/authorized_keys

#https://blog.gypsyengineer.com/en/tips-and-tricks-en/running-an-ssh-server-in-a-docker-image-as-a-debugging-mode.html
#https://github.com/triggermesh/azure-runtime
# https://blog.quickbird.uk/debug-netcore-containers-remotely-9a103060b2ff