
FROM microsoft/dotnet:2.2-sdk AS installer-env 

# Build project
WORKDIR /src

COPY CommonLib /src/CommonLib/

COPY Informer/MandateServiceInformer /src/Informer/MandateServiceInformer/

WORKDIR /src/CommonLib/Elenktis.Common.AzResourceManager
RUN dotnet restore Elenktis.Common.AzResourceManager.csproj

WORKDIR /src/CommonLib/Elenktis.Common.Configuration
RUN dotnet restore Elenktis.Common.Configuration.csproj

WORKDIR /src/CommonLib/Elenktis.Common.Messaging
RUN dotnet restore Elenktis.Common.Messaging.csproj

WORKDIR /src/CommonLib/Elenktis.Common.Command
RUN dotnet restore Elenktis.Common.Command.csproj

WORKDIR /src/Informer/MandateServiceInformer

RUN cd /src/Informer/MandateServiceInformer/ && \
    mkdir -p /home/site/wwwroot && \
    dotnet publish -c Debug --output /home/site/wwwroot


# install az func cli, dotnet sdk and ssh server for remote debug
FROM ubuntu:18.04@sha256:de774a3145f7ca4f0bd144c7d4ffb2931e06634f11529653b23eba85aef8e378

# copy into ubuntu image from previous image
COPY --from=installer-env ["/home/site/wwwroot", "/home/site/wwwroot"]

ENV AzureWebJobsScriptRoot=/home/site/wwwroot \
AzureFunctionsJobHost__Logging__Console__IsEnabled=true 

# Install VS Remote Debugger
RUN apt-get update
RUN apt-get install zip unzip curl -y
RUN curl -sSL https://aka.ms/getvsdbgsh | bash /dev/stdin -v latest -l ~/vsdbg

# Install SSH for remote SSH debugging
RUN apt-get install -y --no-install-recommends openssh-server \
 && mkdir -p /run/sshd

COPY --from=installer-env ["/home/site/wwwroot/ssh/sshd-config", "/etc/ssh/sshd-config"]

ENV SSH_PASSWD "root:P@s$w0rd"

# Set password to 'Docker!'. Change as needed.  
#RUN echo "root:P@s$w0rd" | chpasswd

#Copy SSH settings file. See elsewhere to find them.
COPY Informer/MandateServiceInformer/ssh/sshd-config /src/etc/ssh/sshd_config/

#VS remote debugger uses port 2222
EXPOSE 2222

CMD ["/usr/sbin/sshd", "-D"]


# Install azure func core tool & dotnet sdk 2.2
RUN set -e; \
  export DEBIAN_FRONTEND=noninteractive; \

  apt-get install -y --no-install-recommends curl wget ca-certificates gpg dirmngr gpg-agent; \
  wget -q https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb; \
  dpkg -i packages-microsoft-prod.deb; \
  curl -sL https://deb.nodesource.com/setup_8.x | bash -; \
  curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg; \
  mv microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg; \
  sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-bionic-prod bionic main" > /etc/apt/sources.list.d/dotnetdev.list'; \
  apt-get update; \
  apt-get install -y azure-functions-core-tools dotnet-sdk-2.2; \  
  rm -rf /var/lib/apt/lists/* /var/log/apt

RUN groupadd -r func && useradd -d /home/func --no-log-init -r -g func func
RUN mkdir /home/func
RUN chown -R func:func /home/func
RUN mkdir /.azurefunctions && chown func.func /.azurefunctions
USER func:func



#ssh key, if using password only comment this line
#COPY ./ssh/authorized_keys  root/.ssh/authorized_keys
#https://github.com/triggermesh/azure-runtime
# https://blog.quickbird.uk/debug-netcore-containers-remotely-9a103060b2ff